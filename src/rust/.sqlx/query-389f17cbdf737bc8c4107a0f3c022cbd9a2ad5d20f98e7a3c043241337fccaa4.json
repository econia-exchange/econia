{
  "db_name": "PostgreSQL",
  "query": "WITH parameters AS (\n    SELECT\n        $1::numeric AS max_txn_version)\nINSERT INTO aggregator.user_history (\n    market_id,\n    order_id,\n    created_at,\n    last_updated_at,\n    integrator,\n    total_filled,\n    remaining_size,\n    order_status,\n    order_type,\n    \"user\",\n    direction,\n    price,\n    average_execution_price,\n    custodian_id,\n    self_match_behavior,\n    restriction,\n    min_base,\n    max_base,\n    min_quote,\n    max_quote,\n    total_fees_paid_in_quote_subunits\n)\nSELECT\n    swaps.market_id,\n    swaps.order_id,\n    swaps.\"time\",\n    NULL,\n    swaps.integrator,\n    0,\n    DIV(swaps.max_base, markets.lot_size),\n    'open',\n    'swap',\n    swaps.signing_account,\n    CASE\n        WHEN swaps.direction = true THEN 'sell'::order_direction\n        ELSE 'buy'::order_direction\n    END,\n    swaps.limit_price,\n    NULL,\n    NULL,\n    NULL,\n    NULL,\n    swaps.min_base,\n    swaps.max_base,\n    swaps.min_quote,\n    swaps.max_quote,\n    0\nFROM\n    parameters,\n    place_swap_order_events AS swaps\n    INNER JOIN market_registration_events AS markets ON markets.market_id = swaps.market_id\nWHERE\n    swaps.txn_version > max_txn_version\n",
  "describe": {
    "columns": [],
    "parameters": {
      "Left": [
        "Numeric"
      ]
    },
    "nullable": []
  },
  "hash": "389f17cbdf737bc8c4107a0f3c022cbd9a2ad5d20f98e7a3c043241337fccaa4"
}
